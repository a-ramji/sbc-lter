---
title: "SBC LTER analysis"
author: "Anna Ramji"
format: html
editor: visual
---

```{r}

```

## Introduction

In this Quarto Document, I'll be working with data from the Santa Barbara Coast LTER sites, analyzing data using statistical analysis methods covered in the Master of Environmental Data Science program's Environmental Data Science (EDS) 222: Statistics for Environmental Data Science course taught by Tamma Carleton (tcarleton\@ucsb.edu).

## Background

(Putting essential background information here)

(setting up the problem)

(metadata, column info, etc.)

### Dataset 1: Kelp Forest dynamics: Fish abundance

Reed, D. and R. Miller. 2023. SBC LTER: Reef: Kelp Forest Community Dynamics: Fish abundance ver 38. Environmental Data Initiative. https://doi.org/10.6073/pasta/92003d368dfe121f6709ad1507412f66 (Accessed 2023-11-22)

### Dataset 2: CA Spiny Lobster Data

Reed, D. and R. Miller. 2023. SBC LTER: Reef: Abundance, size and fishing effort for California Spiny Lobster (Panulirus interruptus), ongoing since 2012 ver 9. Environmental Data Initiative. https://doi.org/10.6073/pasta/3595322687af94cd532620ad9db94c77 (Accessed 2023-11-22).

### Dataset 3: Feeding relationships

Santa Barbara Coastal LTER, J.E. Byrnes, D.C. Reed, B.J. Cardinale, K.C. Cavanaugh, S.J. Holbrook, and R.J. Schmitt. 2022. SBC LTER: Reef: Feeding relationships for kelp forest species ver 4. Environmental Data Initiative. https://doi.org/10.6073/pasta/e82a082f4440d469c84e11a265266004 (Accessed 2023-11-22).





# Context

## California Spiny Lobsters
https://cadivingnews.com/the-lifecycle-of-spiny-lobsters/


### Importing libraries

```{r libraries, warning=FALSE, message=FALSE}
library(tidyverse)
library(readr)
library(gt)
library(tufte)
library(feasts)
library(here)
library(patchwork)
library(janitor)
library(tsibble)
library(forecast)
library(lubridate)

library(vegan) # for diversity index

```

# Reading in the Data


```{r lobster_data}
# using the package `here()`

# setting the file path for our lobster abundance csv
lobster_abundance_fp <- here("data", "lobsters", "knb-lter-sbc.77.9",  "Lobster_Abundance_All_Years_20230831.csv")

# read in lobster abundance data from filepath
lobster_abd <- read_csv(lobster_abundance_fp, na = c("-99999")) |> 
  clean_names() |> 
  mutate("day" = lubridate::day(date))

# making a tidied subset, finding average count and size per year per site
lobster_subset <- lobster_abd |> 
  select(year, month, day, date, site, count, size_mm) |> 
  group_by(year, site) |> 
  summarize(avg_count = round(mean(count, na.rm = TRUE), 3), 
            avg_size = round(mean(size_mm, na.rm = TRUE), 3))


```


```{r lobster_plots}
# plot average lobster abundance per site per year
lobster_abd_plot <- ggplot(data = lobster_subset) + 
  geom_point(aes(x = year, y = avg_count,
                 color = site)) +
  geom_line(aes(x = year, y = avg_count,
                color = site)) +
  geom_vline(xintercept = 2015,  linetype = "dotted") + # showing 2015 el nino
  facet_wrap(~site) +
  theme_bw() +
  theme(strip.background = element_rect(fill = "transparent")) +
  labs(color = "Site",
       x = "Year",
       y = "Average Count",
       title = "Lobster Abundance Averaged per Site per Year",
       subtitle = "SBC LTER sites") +
  theme(legend.position = "none")

# view plot
lobster_abd_plot

# plot average lobster size per site per year
lobster_size_plot <- lobster_subset |> ggplot() + 
  geom_point(aes(x = year, y = avg_size,
                 color = site)) +
  geom_line(aes(x = year, y = avg_size,
                 color = site)) +
  # showing lobster size of sexual maturity 
  geom_hline(yintercept = 82.55, linetype = "dashed", alpha = 0.5) + 
  geom_vline(xintercept = 2015,  linetype = "dotted") + # showing 2015 el nino
  facet_wrap(~site) +
  theme_bw() +
  theme(strip.background = element_rect(fill = "transparent")) +
  labs(
    #color = "Site",
       x = "Year",
       y = "Average Size (mm)",
       title = "Lobster Size Averaged per Site per Year",
       subtitle = "organized by SBC LTER site") +
  theme(legend.position = "none")


lobster_size_plot
  
```



```{r water-temp-data}
# setting water temperature file path
water_temp_fp <- here("data", "water-temp", "knb-lter-sbc.13.29", "Bottom_temp_all_years_20230724.csv")

# reading in water temp data
water_temp <- read_csv(water_temp_fp, na = c("-99999")) |> 
  clean_names() |> 
  rename("date" = date_local, "time" = time_local) |> # cleaning names
  select(-serial) |> 
  mutate("year" = lubridate::year(date), # adding columns to join by
         "month" = lubridate::month(date),  # and filter later on 
         "day" = lubridate::day(date))


# prepping water temp data to compare with lobster data

# finding the average water temperatures in August (month = 8) per year per site
# to use with Lobster Abundance data, since observations/data are only collected
# in August each year

august_temps <- water_temp |> 
  filter(month %in% c(8)) |> # select August temps
  group_by(year, site) |> 
  summarize(avg_temp = mean(temp_c, na.rm = TRUE)) # find avg temp


august_temp_trends <- ggplot(data = august_temps) +
  geom_point(aes(x = year, 
                 y = avg_temp,
                 color = site)) +
  geom_line(aes(x = year, 
                y = avg_temp,
                color = site)) +
  theme_bw() +
  facet_wrap(~site) +
  theme(strip.background = element_rect(fill = "transparent")) +
  labs(title = "Average Water Temperature in August over Time",
       subtitle = "Ocean bottom temperatures (C) at SBC LTER sites", 
       x = "Year",
       y = "Average Water Temperature (C)")

august_temp_trends


# make a lobster abundance-friendly water temperature subset 
## (narrow data before joining)

temp_lobster_plots <- august_temp_trends

#head(water_temp)
#tail(water_temp)
```


```{r lobster_temp_join}
#lobster_abd_temp <- left_join(lobster_abd, water_temp, by = c("date", "site")) |> 
#  drop_na(temp_c)

#head(lobster_abd_temp)
```

```{r}
# sum(is.na(lobster_abd_temp$temp_c))

```


```{r lobster_joined_group}

lobster_summary <- lobster_abd_temp |> 
  group_by(date, site) |> 
  summarize(mean_temp = round(mean(temp_c, na.rm = TRUE), 3),
            count = n())
  
lobster_summary

```


```{r lobster_temp_reg}
lobster_regression <- lm(formula = temp_c ~ count, data = lobster_abd_temp)

summary(lobster_regression)

```

```{r}

lobster_abd_temp |> 
  ggplot(data = lobster_abd_temp) +
  geom_jitter(aes(x = temp_c, y = count,
                  color = site)) +
  facet_wrap(~site) 

    


```

```{r}
ggplot(data = lobster_summary) +
  geom_line(aes(x = date, y = mean_temp))

```


```{r}
acf(water_temp$temp_c, lag.max=12)
```



```{r}

#lobster_abd_temp |> forecast::autoplot()

# as_tsibble(lobster_abd_temp) %>%
#   model(
#     classical_decomposition(value, type = "additive")
#   ) %>%
#   components() %>%
#   autoplot() 
```



```{r fish-data}
# setting file path for fish abundance
fish_abd_fp <- here("data", "fish_abundance", "knb-lter-sbc.17.38", "Annual_fish_comb_20230814.csv")

fish_abd <- read_csv(fish_abd_fp, na = c("-99999")) |> 
  clean_names() |> 
  select(-year, -month) |> 
  filter(taxon_class %in% c("Actinopterygii"))

head(fish_abd)
tail(fish_abd)
```

```{r fish_temp}

fish_temp <- left_join(fish_abd, water_temp, by = c("date", "site")) |> 
  drop_na(temp_c)

head(fish_temp)
```

```{r}
fish_temp_summary <- fish_temp  |> 
  group_by(date, scientific_name, site) |> 
  summarize(mean_temp = (mean(temp_c, na.rm = TRUE)),
            count = n())
fish_temp_summary

```


```{r iucn-data}

iucn_fp <- here("data", "redlist_species_data_all_fish", "assessments.csv")

iucn_fish <- read_csv(iucn_fp) |> 
  clean_names() |> 
  select(scientific_name, redlist_category, population_trend)

head(iucn_fish)

iucn_fish_names <- list(unique(iucn_fish$scientific_name))
iucn_fish_names
# cross-selecting species 

fish_temp_iucn <- inner_join(fish_temp, iucn_fish) |> 
  select(-group, -mobility, -vis, -quad, -side) |> 
  mutate(year = lubridate::year(date)) |> 
  relocate(year, .before = site) 

head(fish_temp_iucn)

# nrow()

```


```{r}
fish_temp_summary |> 
  ggplot(aes(x = date,
             y = count,
             color=scientific_name)) +
  geom_point() +
  theme(legend.position = "none")
```


```{r plotting_function}

jitter_plot <- function(.data) {
  ggplot(data = .data, 
         aes(x = mean_temp,
             y = count)) +
    geom_jitter(alpha = 0.5) +
    geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
    labs(x = "Mean temperature (C)",
       y = "Count",
       title = "SBC LTER Average temperature (Celsius) over time") +
    theme_bw() 
}


```


```{r temp_time_plot}

temp_time_plot <- jitter_plot(.data = fish_temp_summary)

temp_time_plot
```





```{r}
fish_count_plot <- fish_temp_summary |> 
  ggplot(aes(x = mean_temp,
             y = count)) +
  geom_jitter() +
  geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
  theme_bw() +
  labs(x = "Mean temperature (C)",
       y = "Count",
       title = "SBC LTER Average temperature (Celsius) over time")


fish_count_plot


```


```{r}
hist(fish_temp_summary$mean_temp)
#hist(fish_temp_summary$count)

```

```{r fish_count_plot_facet}

fish_count_plot_facet <- fish_temp_summary |> 
  ggplot(aes(x = mean_temp,
             y = count)) +
  geom_jitter(alpha = 0.5) +
  geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
  facet_wrap(~site)
  theme_bw() +
  labs(x = "Mean temperature (C)",
       y = "Count",
       title = "SBC LTER Average temperature (Celsius) over time")


fish_count_plot_facet


```


```{r site_selections}

carp <- fish_temp_summary |> 
  filter(site %in% c("CARP"))

carp_plot <-  jitter_plot(.data = carp) +
  labs(subtitle = "Carpenteria Test Site (CARP)")
carp_plot


```




```{r}



# fish_temp_summary |> 
# ggplot(aes(x = mean_temp,
#              y = count)) +
#   geom_jitter(alpha = 0.5) +
#   geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
#   facet_wrap(~scientific_name)
#   theme_bw() +
#   labs(x = "Mean temperature (C)",
#        y = "Count",
#        title = "SBC LTER Average temperature (Celsius) over time")

```



```{r}



```




make diversity index, look at relationship between water temp and diversity


group by site, date

summarize with shannon index
https://rdrr.io/cran/vegan/man/diversity.html 



Null hypothesis: water temperature has zero correlation with fish diversity
Alternative hypothesis: water temperature is correlated with fish diversity


Shannon or Shannon–Weaver (or Shannon–Wiener) index is defined as $H' = - \sum_{i} log_{b} p_{i} $, where $p_{i}$ is the proportional abundance of species $i$ and $b$ is the base od the logarithm. It is most popular to use natural logarithms, but some argue for base $b = 2$ (which makese sense, but no real difference).

The diversity function can find the total (or gamma) diversity of pooled communities with argument groups. The average alpha diversity can be found as the mean of diversities by the same groups, and their difference or ratio is an estimate of beta diversity (see Examples). The pooling can be based either on the observed abundancies, or all communities can be equalized to unit total before pooling; see Jost (2007) for discussion. Functions adipart and multipart provide canned alternatives for estimating alpha, beta and gamma diversities in hierarchical settings.

None of these diversity indices is usable for empty sampling units without any species, but some of the indices can give a numeric value. Filtering out these cases is left for the user.



```{r diversity}
fish_diversity_df <- fish_temp_iucn |> 
  select(year, site, count, temp_c, scientific_name, common_name, redlist_category, population_trend) |> 
  group_by(year, site)

fish_diversity <- fish_diversity_df |> 
  summarize(index = vegan::diversity(count, index = "shannon"))

head(fish_diversity)


# get average temperature per site over time (per year)
```


```{r avg-temps}
avg_temps_fish <- fish_diversity_df |> 
  summarize(avg_temp = round(mean(temp_c, na.rm = TRUE), 3)) 

avg_temps_subset <- avg_temps_fish |> 
  filter(!site %in% c("AHND", "SCTW" ))


carp_temps <- avg_temps_fish |> 
  filter(site == "CARP")

napl_temps <- avg_temps_fish |> 
  filter(site == "NAPL")

ivee_temps <- avg_temps_fish |> 
  filter(site == "IVEE")

mohk_temps <- avg_temps_fish |> 
  filter(site == "MOHK")

aque_temps <- avg_temps_fish |> 
  filter(site == "AQUE")

golb_temps <- avg_temps_fish |> 
  filter(site == "GOLB")


agg_avg_temps_plot <- ggplot() +
  geom_line(data = avg_temps_fish,
            aes(x = year, y = avg_temp)) 
  
```


```{r avg-temps-plot}
avg_temp_subset_plot <- ggplot(data = avg_temps_subset) +
  geom_line(aes(x = year, y = avg_temp)) +
  facet_wrap(~site) +
  theme_bw() +
  theme(strip.background = element_rect(fill = "transparent")) +
  labs(x = "Average Temperature (C)",
       y = "Year", 
       title = "Annual Average Temperature Over Time",
       subtitle = "at nine SBC LTER sites")

avg_temp_subset_plot

```
- note - biggest/strongest El Nino that California has ever experienced, between 2015 and 2016. Rise in ocean temperatures. 



1.. site year index
2. site year temp -- average per site per year
3. site year iucn status

```{r iucn-status-time}

iucn_status <- fish_temp_iucn |> 
  group_by(year, site, redlist_category) |> 
#  pivot_wider(names_from = 'redlist_category', )
#|> 
  summarize(iucn_count = n()) 

iucn_status$redlist_category <- factor(iucn_status$redlist_category,
                                       levels = c("Critically Endangered",
                                                  "Vulnerable",
                                                  "Least Concern",
                                                  "Data Deficient"))

iucn_status |> ggplot() +
  geom_jitter(aes(x = year, y = iucn_count,
                  color = redlist_category),
              alpha = 0.8) +
  # geom_line(aes(x = year, y = iucn_count,
  #               color = redlist_category)) +
  geom_smooth(aes(x = year, y = iucn_count,
                  color = redlist_category),
              method = "lm", se = TRUE) +
  scale_color_manual(limits = c("Critically Endangered",
                                "Vulnerable",
                                "Least Concern",
                                "Data Deficient"),
                     values = c("Critically Endangered"="red",
                                "Vulnerable"="yellow",
                                "Least Concern"="cornflowerblue",
                                "Data Deficient"="grey")) +
  facet_wrap(~redlist_category) +
  theme_bw() +
  theme(strip.background = element_rect(fill = "transparent")) +
  labs(color = "IUCN Redist Status",
       x = "Year",
       y = "Count",
       title = "Fish Population Demographics Over Time",
       subtitle = "across all SBC LTER sites")


carp_iucn_trend <- iucn_status |> 
  filter(site == "CARP")

carp_iucn_trend |> ggplot() +
  geom_jitter(aes(x = year, y = iucn_count,
                  color = redlist_category),
              alpha = 0.8) +
    geom_smooth(aes(x = year, y = iucn_count,
                  color = redlist_category), method = "lm", se = TRUE) +

   # geom_line(aes(x = year, y = iucn_count,
   #              color = redlist_category)) +
  scale_color_manual(limits = c("Critically Endangered",
                                "Vulnerable",
                                "Least Concern",
                                "Data Deficient"),
                     values = c("Critically Endangered"="red",
                                "Vulnerable"="yellow",
                                "Least Concern"="cornflowerblue",
                                "Data Deficient"="grey")) +
  theme_bw() +
  facet_wrap(~redlist_category) +
  theme(strip.background = element_rect(fill = "transparent")) +
  labs(color = "IUCN Redist Status",
       x = "Year",
       y = "Count",
       title = "Fish Population Demographics Over Time",
       subtitle = "SBC LTER Carpenteria site")

#carp_iucn_trend

#summary(lm(formula = ))

#legend_order <- levels(with(iucn_status, reorder(Labels, Percent)))
# scale_fill_discrete(breaks=c('Critically Endangered', 'Vulnerable', 'Least Concern', 'Data Deficient'))
# values=c("Critically Endangered"="red", "Vulnerable"="yellow","Least Concern"="lightblue","Data Deficient"="grey"))

```




```{r demographics-over-time}

status_temp_trend <- inner_join(iucn_status, avg_temps_fish)
status_temp_trend

diversity_temp_trend <- inner_join(status_temp_trend, fish_diversity)
diversity_temp_trend

summary(lm(formula = index ~ avg_temp, data = diversity_temp_trend))

```





```{r food-web}

food_web <- read_csv("data/food_web/knb-lter-sbc.56.4/byrnes_foodweb_table1.csv", na = c("-99999")) |> 
  clean_names() 


```

